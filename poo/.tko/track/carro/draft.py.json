{
    "patches": [
        {
            "label": "2025-10-02_20-32-48",
            "content": "@@ -1,1753 +0,0 @@\n-class car:%0A    def __init__(self):%0A        self.passengers = 0%0A        self.passMax = 2%0A        self.gas = 0%0A        self.gasMax = 100%0A        self.km = 0%0A%0A    def __str__(self) -%3E str:%0A        return f%22pass: %7Bself.passengers%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22%0A    %0A    def enter(self) -%3E None:%0A        if self.passengers %3C self.passMax:%0A            self.passengers += 1%0A        else:%0A            print(%22fail: limite de pessoas atingido%22)%0A%0A    def leave(self) -%3E None:%0A        if self.passengers %3E 0:%0A            self.passengers -= 1%0A        else:%0A            print(%22fail: nao ha ninguem no carro%22)%0A%0A    def fuel(self, amount: int) -%3E None:%0A        self.gas += amount%0A        if self.gas %3E self.gasMax:%0A            self.gas = self.gasMax%0A%0A    def drive(self, distance: int) -%3E None:%0A        if self.passengers == 0:%0A            print(%22fail: nao ha ningue no carro%22)%0A            return%0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        if self.gas %3C distance:%0A            self.km += self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.gas = 0%0A            self.km += distance%0A            self.gas -= distance%0A%0Adef main() -%3E None:%0A    car = car()%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A        args = line.split()%0A        cmd = args%5B0%5D %0A        if cmd == %22end%22:%0A            break%0A        elif cmd == %22show%22:%0A            print(car)%0A        elif cmd == %22enter%22:%0A            car.enter()%0A        elif cmd == %22leave%22:%0A            car.leave()%0A        elif cmd == %22fuel%22:%0A            car.fuel(int(args%5B1%5D))%0A        elif cmd == %22drive%22:%0A            car.drive(int(args%5B1%5D))\n",
            "lines": "0"
        },
        {
            "label": "2025-10-02_23-45-38",
            "content": "@@ -3,9 +3,9 @@\n ass \n-C\n+c\n ar:%0A\n@@ -49,29 +49,14 @@\n pass\n-_ = 0%0A        self.km\n+engers\n  = 0\n@@ -127,16 +127,36 @@\n ax = 100\n+%0A        self.km = 0\n %0A%0A    de\n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-57-33",
            "content": "@@ -1,15 +1,15 @@\n class \n-c\n+C\n ar:%0A    \n@@ -45,22 +45,37 @@\n elf.pass\n-engers\n+_ = 0%0A        self.km\n  = 0%0A   \n@@ -142,36 +142,16 @@\n ax = 100\n-%0A        self.km = 0\n %0A%0A    de\n@@ -1238,19 +1238,37 @@\n         \n-cmd\n+try:%0A            line\n  = input\n@@ -1286,25 +1286,158 @@\n         \n+except EOFError:%0A            break%0A        if not line:%0A            continue%0A        args = line.split()%0A        cmd = args%5B0%5D %0A        \n if cmd\n-%5B0%5D\n  == %22end\n@@ -1469,27 +1469,24 @@\n     elif cmd\n-%5B0%5D\n  == %22show%22:%0A\n@@ -1520,27 +1520,24 @@\n     elif cmd\n-%5B0%5D\n  == %22enter%22:\n@@ -1573,27 +1573,24 @@\n     elif cmd\n-%5B0%5D\n  == %22leave%22:\n@@ -1630,19 +1630,16 @@\n elif cmd\n-%5B0%5D\n  == %22fue\n@@ -1663,27 +1663,28 @@\n ar.fuel(int(\n-cmd\n+args\n %5B1%5D))%0A      \n@@ -1732,16 +1732,17 @@\n ive(int(\n-cmd\n+args\n %5B1%5D))\n",
            "lines": "65"
        },
        {
            "label": "2025-10-03_00-14-07",
            "content": "@@ -1609,40 +1609,4 @@\n 1%5D))\n-%0A%0Aif __name__== %22__main%22:%0A    main()\n",
            "lines": "58"
        },
        {
            "label": "2025-10-03_00-15-48",
            "content": "@@ -1247,29 +1247,11 @@\n     \n-try:%0A            line\n+cmd\n  = i\n@@ -1277,159 +1277,17 @@\n     \n-except EOFError:%0A            break%0A        if not line:%0A            print(f%22$%7Bline%7D%22)%0A        args = line.split()%0A        cmd = args%5B0%5D %0A        \n if cmd\n+%5B0%5D\n  == \n@@ -1323,24 +1323,27 @@\n     elif cmd\n+%5B0%5D\n  == %22show%22:%0A\n@@ -1377,24 +1377,27 @@\n     elif cmd\n+%5B0%5D\n  == %22enter%22%0A\n@@ -1395,16 +1395,17 @@\n  %22enter%22\n+:\n %0A       \n@@ -1433,24 +1433,27 @@\n     elif cmd\n+%5B0%5D\n  == %22leave%22:\n@@ -1489,24 +1489,27 @@\n     elif cmd\n+%5B0%5D\n  == %22fuel%22:%0A\n@@ -1529,28 +1529,27 @@\n ar.fuel(int(\n-args\n+cmd\n %5B1%5D))%0A      \n@@ -1601,12 +1601,11 @@\n int(\n-args\n+cmd\n %5B1%5D)\n@@ -1618,17 +1618,16 @@\n __name__\n- \n == %22__ma\n@@ -1628,18 +1628,16 @@\n  %22__main\n-__\n %22:%0A    m\n@@ -1641,13 +1641,8 @@\n   main()\n-%0A    \n",
            "lines": "61"
        },
        {
            "label": "2025-10-03_00-31-31",
            "content": "@@ -1218,27 +1218,12 @@\n  = c\n-h\n+a\n r()\n- # type: ignore\n %0A   \n@@ -1521,31 +1521,16 @@\n int(car)\n- # type: ignore\n %0A       \n@@ -1573,31 +1573,16 @@\n .enter()\n- # type: ignore\n %0A       \n@@ -1626,31 +1626,16 @@\n .leave()\n- # type: ignore\n %0A       \n@@ -1689,31 +1689,16 @@\n rgs%5B1%5D))\n- # type: ignore\n %0A       \n@@ -1758,23 +1758,8 @@\n 1%5D))\n- # type: ignore\n %0A%0Aif\n@@ -1794,8 +1794,12 @@\n  main()%0A\n+    \n",
            "lines": "69"
        },
        {
            "label": "2025-10-03_00-33-23",
            "content": "@@ -1218,12 +1218,27 @@\n  = c\n-a\n+h\n r()\n+ # type: ignore\n %0A   \n@@ -1536,16 +1536,31 @@\n int(car)\n+ # type: ignore\n %0A       \n@@ -1579,17 +1579,16 @@\n  %22enter%22\n-:\n %0A       \n@@ -1603,16 +1603,31 @@\n .enter()\n+ # type: ignore\n %0A       \n@@ -1671,16 +1671,31 @@\n .leave()\n+ # type: ignore\n %0A       \n@@ -1749,16 +1749,31 @@\n rgs%5B1%5D))\n+ # type: ignore\n %0A       \n@@ -1829,16 +1829,31 @@\n rgs%5B1%5D))\n+ # type: ignore\n %0A%0Aif __n\n@@ -1879,12 +1879,13 @@\n :%0A    main()\n+%0A\n",
            "lines": "68"
        },
        {
            "label": "2025-10-03_00-35-31",
            "content": "@@ -1,62 +1,75 @@\n-class Car:%0A    def __init__(self):%0A        self.\n+@@ -3,9 +3,9 @@%0A ass %0A-C%0A+c%0A ar:%250A%0A@@ -49,29 +49,14 @@%0A \n pass\n+%0A-\n _ = 0\n-%0A\n+%250A\n     \n@@ -83,38 +83,59 @@\n f.km\n- = 0%0A        self.passMax = 2%0A\n+%0A+engers%0A  = 0%0A@@ -127,16 +127,36 @@%0A ax = 100%0A+%250A\n     \n@@ -147,631 +147,823 @@\n elf.\n-gas\n+km\n  = 0%0A \n-       self.gasMax = 100%0A%0A    def __str__(self):%0A   \n+%250A%250A    de%0A@@ -162,32 +162,39 @@%0A ef __str__(self)%0A+ -%253E str%0A :%250A\n      \n+   \n return\n- f%22pass: %7Bself.pass_%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22%0A%0A    def enter(self):%0A        if self.pass_ %3C self.passMax:%0A            self.pass_ += 1%0A        else:%0A            print(%22fail: limite de pessoas atingido%22)%0A%0A    def leave(self):%0A        if self.pass_ %3E 0:%0A            self.pass_ -= 1%0A        else:%0A            print(%22fail: nao ha ninguem no carro%22)%0A%0A    def fuel(self, qtd):%0A        self.gas\n+%0A@@ -212,17 +212,22 @@%0A elf.pass%0A-_%0A+engers%0A %257D, gas: %0A@@ -253,16 +253,20 @@%0A lf.km%257D%2522%250A%0A+    %0A %250A    def%0A@@ -273,24 +273,32 @@%0A  enter(self)%0A+ -%253E None%0A :%250A        if%0A@@ -307,17 +307,22 @@%0A elf.pass%0A-_%0A+engers%0A  %253C self.%0A@@ -351,17 +351,22 @@%0A elf.pass%0A-_%0A+engers%0A  += 1%250A  %0A@@ -447,24 +447,32 @@%0A  leave(self)%0A+ -%253E None%0A :%250A        if%0A@@ -481,17 +481,22 @@%0A elf.pass%0A-_%0A+engers%0A  %253E 0:%250A  %0A@@ -514,17 +514,22 @@%0A elf.pass%0A-_%0A+engers%0A  -= 1%250A  %0A@@ -615,12 +615,28 @@%0A lf, %0A-qtd)%0A+amount: int) -%253E None%0A :%250A  %0A@@ -657,11 +657,14 @@%0A \n  += \n+%0A-\n qtd%0A\n-        if self.gas %3E self.gasMax:%0A            s\n++amount%0A %250A   %0A@@ -755,17 +755,34 @@%0A lf, dist%0A-)%0A+ance: int) -%253E None%0A :%250A      %0A@@ -795,17 +795,22 @@%0A \n elf.\n-gas = self.gasMax%0A%0A    def drive(self, dist):%0A        if self.pass_ == 0:%0A            print(%22fai\n+pass%0A-_%0A+engers%0A  == 0:%250A %0A@@ -838,33 +838,32 @@%0A \n l: n\n@@ -974,17 +974,21 @@\n a ningue\n-m\n+%0A-m%0A \n  no carr\n@@ -992,285 +992,112 @@\n arro\n-%22)%0A            return%0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        if self.gas %3C dist:%0A            self.km += self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.gas = 0%0A            \n+%2522)%250A    %0A@@ -988,16 +988,20 @@%0A s %253C dist%0A+ance%0A :%250A      %0A@@ -1133,39 +1133,27 @@%0A     %0A-\n return\n-%0A\n+%250A\n     \n@@ -1114,23 +1114,10 @@\n as -\n-= dist%0A        \n+%0A+\n self\n@@ -1125,623 +1125,115 @@\n km +\n+%0A \n = dist%0A\n-%0Adef main() -%3E None:%0A    car = car()%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if not line:%0A            print(f%22$%7Bline%7D%22)%0A        args = line.split()%0A        cmd = args%5B0%5D %0A        if cmd == %22end%22:%0A            break%0A        elif cmd == %22show%22:%0A            print(car)%0A        elif cmd == %22enter%22:%0A            car.enter()%0A        elif cmd == %22leave%22:%0A            car.leave()%0A        elif cmd == %22fuel%22:%0A            car.fuel(int(args%5B1%5D))%0A        elif cmd == %22drive%22:%0A            car.drive(int(args%5B1%5D))%0A%0Aif __name__ == %22__main__%22:%0A    main()\n++ance%0A %250A   %0A@@ -1157,31 +1157,40 @@%0A         %0A+    %0A self.%0A-km +%0A+gas -%0A = dist%0A+ance%0A %250A%250Adef ma%0A\n",
            "lines": "99"
        },
        {
            "label": "2025-10-03_00-38-40",
            "content": "@@ -1,15 +1,15 @@\n class \n-c\n+C\n ar:%0A    \n@@ -45,22 +45,37 @@\n elf.pass\n-engers\n+_ = 0%0A        self.km\n  = 0%0A   \n@@ -142,36 +142,16 @@\n ax = 100\n-%0A        self.km = 0\n %0A%0A    de\n@@ -169,15 +169,8 @@\n elf)\n- -%3E str\n :%0A  \n@@ -200,22 +200,17 @@\n elf.pass\n-engers\n+_\n %7D, gas: \n@@ -236,20 +236,16 @@\n lf.km%7D%22%0A\n-    \n %0A    def\n@@ -252,32 +252,24 @@\n  enter(self)\n- -%3E None\n :%0A        if\n@@ -278,22 +278,17 @@\n elf.pass\n-engers\n+_\n  %3C self.\n@@ -317,22 +317,17 @@\n elf.pass\n-engers\n+_\n  += 1%0A  \n@@ -412,24 +412,16 @@\n ve(self)\n- -%3E None\n :%0A      \n@@ -434,22 +434,17 @@\n elf.pass\n-engers\n+_\n  %3E 0:%0A  \n@@ -462,22 +462,17 @@\n elf.pass\n-engers\n+_\n  -= 1%0A  \n@@ -558,28 +558,12 @@\n lf, \n-amount: int) -%3E None\n+qtd)\n :%0A  \n@@ -584,14 +584,11 @@\n  += \n-amount\n+qtd\n %0A   \n@@ -683,26 +683,9 @@\n dist\n-ance: int) -%3E None\n+)\n :%0A  \n@@ -706,14 +706,9 @@\n pass\n-engers\n+_\n  == \n@@ -748,16 +748,17 @@\n a ningue\n+m\n  no carr\n@@ -891,20 +891,16 @@\n s %3C dist\n-ance\n :%0A      \n@@ -1032,27 +1032,39 @@\n     \n-self.km +\n+return%0A        self.gas -\n = dist\n-ance\n %0A   \n@@ -1072,32 +1072,23 @@\n     \n-    \n self.\n-gas -\n+km +\n = dist\n-ance\n %0A%0Ade\n@@ -1451,16 +1451,17 @@\n  %22enter%22\n+:\n %0A       \n",
            "lines": "69"
        },
        {
            "label": "2025-10-03_00-39-38",
            "content": "@@ -1363,184 +1363,25 @@\n     \n-continue%0A        if line.startswith(%22$%22):%0A            print(line)%0A            cmd_line = line%5B1:%5D.strip()%0A        else:%0A            print(f%22$%7Bline%7D%22)%0A           cmd_line = line\n+print(f%22$%7Bline%7D%22)\n %0A   \n@@ -1396,12 +1396,8 @@\n s = \n-cmd_\n line\n@@ -1522,16 +1522,16 @@\n nt(car)%0A\n+\n         \n@@ -1549,17 +1549,16 @@\n  %22enter%22\n-:\n %0A       \n",
            "lines": "68"
        },
        {
            "label": "2025-10-03_00-52-44",
            "content": "@@ -51,21 +51,16 @@\n ssengers\n-: int\n  = 0%0A   \n@@ -76,21 +76,16 @@\n .passMax\n-: int\n  = 2%0A   \n@@ -97,21 +97,16 @@\n self.gas\n-: int\n  = 0%0A   \n@@ -121,21 +121,16 @@\n f.gasMax\n-: int\n  = 100%0A \n@@ -143,21 +143,16 @@\n  self.km\n-: int\n  = 0%0A%0A  \n@@ -876,17 +876,16 @@\n   return\n- \n %0A       \n@@ -927,16 +927,17 @@\n t(%22fail:\n+ \n tanque v\n@@ -986,10 +986,9 @@\n gas \n-%3E=\n+%3C\n  dis\n@@ -1015,159 +1015,88 @@\n elf.\n-gas -= distance%0A            self.km += distance%0A            return%0A        else:%0A            km_rodado: int = self.gas%0A%0A            self.km +=km_rodado\n+km += self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)\n %0A   \n@@ -1117,25 +1117,24 @@\n gas = 0%0A\n-%0A\n         \n if km_ro\n@@ -1129,101 +1129,44 @@\n     \n-if km_rodado %3E 0:%0A            print(f%22fail: tanque vazio apos andar %7Bkm_rodado%7D km%22)%0A\n+    self.km += distance%0A    \n         \n else\n@@ -1165,53 +1165,28 @@\n     \n+s\n el\n-se:%0A            print(%22fail: tanque vazio%22)\n+f.gas -= distance\n %0A%0Ade\n@@ -1218,27 +1218,12 @@\n  = c\n-h\n+a\n r()\n- # type: ignore\n %0A   \n@@ -1278,45 +1278,60 @@\n ut()\n-%0A            line = line.strip()%0A    \n+.strip()%0A        except EOFError:%0A            break%0A\n     \n@@ -1359,20 +1359,16 @@\n         \n-    \n continue\n@@ -1380,30 +1380,32 @@\n     \n-    print(f%22$%7Bline%7D%22)%0A\n+if line.startswith(%22$%22):\n %0A   \n@@ -1418,188 +1418,184 @@\n    p\n-arts = line.split()%0A            cmd = parts%5B0%5D %0A%0A        if cmd == %22show%22:%0A            print(car) # type: ignore%0A        elif cmd == %22enter%22:%0A            car.enter() # type: ignore\n+rint(line)%0A            cmd_line = line%5B1:%5D.strip()%0A        else:%0A            print(f%22$%7Bline%7D%22)%0A           cmd_line = line%0A        args = cmd_line.split()%0A        cmd = args%5B0%5D \n %0A   \n@@ -1591,34 +1591,32 @@\n rgs%5B0%5D %0A        \n-el\n if cmd == %22leave\n@@ -1610,21 +1610,19 @@\n cmd == %22\n-leave\n+end\n %22:%0A     \n@@ -1632,34 +1632,13 @@\n     \n-car.leave() # type: ignore\n+break\n %0A   \n@@ -1655,20 +1655,20 @@\n cmd == %22\n-fuel\n+show\n %22:%0A     \n@@ -1678,68 +1678,17 @@\n     \n-if len(parts) %3E 1:%0A                quantidade = \n+pr\n int(\n-p\n+c\n ar\n-ts%5B1%5D\n )%0A  \n@@ -1697,128 +1697,52 @@\n     \n-        car.fuel(quantidade) # pyright: ignore%5BreportUnknownMemberType%5D%0A            except %0A            ValueError: pass\n+elif cmd == %22enter%22:%0A            car.enter()\n %0A   \n@@ -1759,19 +1759,19 @@\n cmd == %22\n-dri\n+lea\n ve%22:%0A   \n@@ -1783,434 +1783,147 @@\n     \n-if len(parts) %3E 1:%0A                try:%0A                    distance = int(parts%5B1%5D)%0A                    carro.drive(distance) # pyright: ignore%5BreportUnknownMemberType, reportUndefinedVariable%5D%0A                except ValueError: # type: ignore%0A                    pass%0A            elif cmd == %22end%22: # pyright: ignore%5BreportUnnecessaryComparison%5D%0A                break%0A        except EOFErro:%0A            pass%0Aexcept:%0Apass%0A%0A%0A\n+car.leave()%0A        elif cmd == %22fuel%22:%0A            car.fuel(int(args%5B1%5D))%0A        elif cmd == %22drive%22:%0A            car.drive(int(args%5B1%5D))\n %0A%0Aif\n",
            "lines": "74"
        },
        {
            "label": "2025-10-05_16-02-07",
            "content": "@@ -1963,193 +1963,96 @@\n     \n-elif cmd == %22fuel%22:%0A                if len(parts) %3E 1:%0A                    try:%0A                        quantidade = int(parts%5B1%5D)%0A                        carro.fuel(quantidade)%0A       \n+    car.fuel(quantidade) # pyright: ignore%5BreportUnknownMemberType%5D%0A            except %0A\n     \n@@ -2055,32 +2055,24 @@\n             \n- except \n ValueError:%0A\n@@ -2074,42 +2074,14 @@\n ror:\n-%0A                       \n  pass%0A\n-    \n     \n@@ -2109,36 +2109,32 @@\n e%22:%0A            \n- \n-   \n if len(parts) %3E \n@@ -2128,36 +2128,32 @@\n len(parts) %3E 1:%0A\n-    \n                 \n@@ -2181,21 +2181,16 @@\n     \n-    \n distanc\n-ia\n+e\n  = i\n@@ -2194,36 +2194,32 @@\n = int(parts%5B1%5D)%0A\n-    \n                 \n@@ -2245,16 +2245,79 @@\n tanc\n-ia)%0A    \n+e) # pyright: ignore%5BreportUnknownMemberType, reportUndefinedVariable%5D%0A\n     \n@@ -2342,29 +2342,40 @@\n  ValueError:\n-%0A    \n+ # type: ignore%0A\n             \n@@ -2417,16 +2417,63 @@\n = %22end%22:\n+ # pyright: ignore%5BreportUnnecessaryComparison%5D\n %0A       \n@@ -2487,16 +2487,20 @@\n   break%0A\n+    \n     exce\n@@ -2509,17 +2509,16 @@\n  EOFErro\n-r\n :%0A      \n@@ -2523,25 +2523,25 @@\n     \n+ \n+   \n pass%0A\n-    \n except:%0A\n     \n@@ -2536,24 +2536,16 @@\n except:%0A\n-        \n pass%0A%0A%0A%0A\n@@ -2545,19 +2545,16 @@\n ass%0A%0A%0A%0A%0A\n-%0A%0A%0A\n if __nam\n",
            "lines": "94"
        },
        {
            "label": "2025-10-05_16-04-22",
            "content": "@@ -1,19 +1,17 @@\n class \n-C\n+c\n ar\n-ro\n :%0A    de\n@@ -16,14 +16,16 @@\n def \n+_\n _init_\n+_\n (sel\n@@ -45,22 +45,21 @@\n elf.pass\n-ageiro\n+enger\n s: int =\n@@ -107,21 +107,16 @@\n self.gas\n-olina\n : int = \n@@ -133,21 +133,16 @@\n self.gas\n-olina\n Max: int\n@@ -186,19 +186,28 @@\n def \n+_\n _str_\n+_\n (self)\n+ -%3E str\n :%0A  \n@@ -237,22 +237,21 @@\n elf.pass\n-ageiro\n+enger\n s%7D, gas:\n@@ -260,21 +260,16 @@\n self.gas\n-olina\n %7D, km: %7B\n@@ -278,16 +278,20 @@\n lf.km%7D%22%0A\n+    \n %0A    def\n@@ -298,17 +298,24 @@\n  ent\n-ra\n+e\n r(self)\n+ -%3E None\n :%0A  \n@@ -332,22 +332,21 @@\n elf.pass\n-ageiro\n+enger\n s %3C self\n@@ -376,22 +376,21 @@\n elf.pass\n-ageiro\n+enger\n s += 1%0A \n@@ -396,32 +396,26 @@\n         \n-    return True%0A\n+else:%0A    \n         \n@@ -455,37 +455,16 @@\n ingido%22)\n-%0A        return False\n %0A%0A    de\n@@ -469,18 +469,27 @@\n def \n-sair\n+leave\n (self)\n+ -%3E None\n :%0A  \n@@ -506,22 +506,21 @@\n elf.pass\n-ageiro\n+enger\n s %3E 0:%0A \n@@ -539,22 +539,21 @@\n elf.pass\n-ageiro\n+enger\n s -= 1%0A \n@@ -559,32 +559,26 @@\n         \n-    return True%0A\n+else:%0A    \n         \n@@ -619,29 +619,8 @@\n ro%22)\n-%0A        return False\n %0A%0A  \n@@ -636,26 +636,22 @@\n l(self, \n-quantidade\n+amount\n : int) -\n@@ -644,36 +644,36 @@\n amount: int) -%3E \n-bool\n+None\n :%0A        self.g\n@@ -678,47 +678,40 @@\n .gas\n-olina = min(self.gasolina + quantidade,\n+ += amount%0A        if self.gas %3E\n  sel\n@@ -719,17 +719,12 @@\n .gas\n-olina\n Max\n-)\n+:\n %0A   \n@@ -728,27 +728,42 @@\n         \n-return True\n+    self.gas = self.gasMax\n %0A%0A    de\n@@ -783,18 +783,17 @@\n  distanc\n-ia\n+e\n : int) -\n@@ -798,12 +798,12 @@\n  -%3E \n-bool\n+None\n :%0A  \n@@ -824,14 +824,13 @@\n pass\n-ageiro\n+enger\n s ==\n@@ -863,33 +863,32 @@\n l: nao ha ningue\n-m\n  no carro%22)%0A    \n@@ -894,38 +894,32 @@\n          return \n-False%0A\n %0A        if self\n@@ -922,21 +922,16 @@\n self.gas\n-olina\n  == 0:%0A \n@@ -945,33 +945,32 @@\n     print(%22fail:\n- \n tanque vazio%22)%0A \n@@ -986,23 +986,16 @@\n   return\n- False%0A\n %0A       \n@@ -1006,21 +1006,16 @@\n self.gas\n-olina\n  %3E= dist\n@@ -1017,18 +1017,17 @@\n  distanc\n-ia\n+e\n :%0A      \n@@ -1040,21 +1040,16 @@\n self.gas\n-olina\n  -= dist\n@@ -1043,34 +1043,33 @@\n f.gas -= distanc\n-ia\n+e\n %0A            sel\n@@ -1083,18 +1083,17 @@\n  distanc\n-ia\n+e\n %0A       \n@@ -1103,21 +1103,16 @@\n   return\n- True\n %0A       \n@@ -1159,26 +1159,9 @@\n .gas\n-olina%0A            \n+%0A\n %0A   \n@@ -1179,17 +1179,16 @@\n lf.km +=\n- \n km_rodad\n@@ -1213,35 +1213,14 @@\n .gas\n-olina = 0%0A            %0A    \n+ = 0%0A%0A\n     \n@@ -1237,28 +1237,24 @@\n rodado %3E 0:%0A\n-    \n             \n@@ -1312,38 +1312,30 @@\n m%22)%0A        \n-    \n else:%0A\n-    \n             \n@@ -1365,33 +1365,8 @@\n io%22)\n-%0A            return False\n %0A%0Ade\n@@ -1373,16 +1373,24 @@\n f main()\n+ -%3E None\n :%0A    ca\n@@ -1394,39 +1394,32 @@\n  car\n-ro\n  = \n-Carro()%0A    %0A    try:%0A    \n+chr() # type: ignore%0A\n     \n@@ -1430,16 +1430,29 @@\n e True:%0A\n+        try:%0A\n         \n@@ -1502,29 +1502,16 @@\n strip()%0A\n-            %0A\n         \n@@ -1552,17 +1552,16 @@\n ontinue%0A\n-%0A\n         \n@@ -1646,26 +1646,11 @@\n s%5B0%5D\n-%0A            %0A    \n+ %0A%0A\n     \n@@ -1679,28 +1679,24 @@\n             \n-    \n print(carro)\n@@ -1696,16 +1696,25 @@\n (car\n-ro)%0A    \n+) # type: ignore%0A\n     \n@@ -1754,31 +1754,35 @@\n     \n-    \n car\n-ro\n .ent\n-rar()%0A    \n+er() # type: ignore%0A\n     \n@@ -1822,23 +1822,135 @@\n     \n-    carro.sair(\n+car.leave() # type: ignore%0A        elif cmd == %22fuel%22:%0A            if len(parts) %3E 1:%0A                quantidade = int(parts%5B1%5D\n )%0A  \n@@ -2580,38 +2580,47 @@\n ss%0A%0A\n+%0A%0A%0A%0A%0A%0A\n if \n+_\n _name_\n+_\n  == %22_\n+_\n main_\n+_\n %22:%0A\n-%C2%A0%C2%A0%C2%A0%C2%A0\n+    \n main()\n-%0A\n",
            "lines": "101"
        },
        {
            "label": "2025-10-05_16-07-05",
            "content": "@@ -2662,12 +2662,13 @@\n :%0A%C2%A0%C2%A0%C2%A0%C2%A0main()\n+%0A\n",
            "lines": "99"
        },
        {
            "label": "2025-10-05_16-08-54",
            "content": "@@ -2640,29 +2640,25 @@\n %0Aif \n-_\n _name_\n-_\n  == %22_\n-_\n main_\n-_\n %22:%0A%C2%A0\n",
            "lines": "99"
        },
        {
            "label": "2025-10-05_16-12-03",
            "content": "@@ -2660,17 +2660,18 @@\n ain__%22:%0A\n-   \n+%C2%A0%C2%A0%C2%A0%C2%A0\n main()\n",
            "lines": "99"
        },
        {
            "label": "2025-10-05_16-13-19",
            "content": "@@ -18,16 +18,14 @@\n def \n-_\n _init_\n-_\n (sel\n@@ -197,15 +197,13 @@\n def \n-_\n _str_\n-_\n (sel\n@@ -1248,16 +1248,29 @@\n asolina%0A\n+            %0A\n         \n@@ -1320,25 +1320,37 @@\n asolina = 0%0A\n+            \n %0A\n-\n             \n@@ -1526,17 +1526,16 @@\n  False%0A%0A\n-%0A\n def main\n@@ -1558,17 +1558,21 @@\n Carro()%0A\n+    \n %0A\n-\n     try:\n@@ -1651,17 +1651,29 @@\n strip()%0A\n+            \n %0A\n-\n         \n@@ -1806,17 +1806,29 @@\n arts%5B0%5D%0A\n+            \n %0A\n-\n         \n@@ -2555,38 +2555,8 @@\n d%22:%0A\n-                print(%22$end%22)%0A\n     \n@@ -2633,17 +2633,16 @@\n   pass%0A%0A\n-%0A\n if __nam\n@@ -2660,17 +2660,16 @@\n ain__%22:%0A\n- \n    main(\n",
            "lines": "99"
        },
        {
            "label": "2025-10-05_16-20-03",
            "content": "@@ -2503,16 +2503,46 @@\n  %22end%22:%0A\n+                print(%22$end%22)%0A\n         \n",
            "lines": "101"
        },
        {
            "label": "2025-10-05_16-21-29",
            "content": "class Carro:\n    def __init__(self):\n        self.passageiros: int = 0\n        self.passMax: int = 2\n        self.gasolina: int = 0\n        self.gasolinaMax: int = 100\n        self.km: int = 0\n\n    def __str__(self):\n        return f\"pass: {self.passageiros}, gas: {self.gasolina}, km: {self.km}\"\n\n    def entrar(self):\n        if self.passageiros < self.passMax:\n            self.passageiros += 1\n            return True\n        print(\"fail: limite de pessoas atingido\")\n        return False\n\n    def sair(self):\n        if self.passageiros > 0:\n            self.passageiros -= 1\n            return True\n        print(\"fail: nao ha ninguem no carro\")\n        return False\n\n    def fuel(self, quantidade: int) -> bool:\n        self.gasolina = min(self.gasolina + quantidade, self.gasolinaMax)\n        return True\n\n    def drive(self, distancia: int) -> bool:\n        if self.passageiros == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return False\n\n        if self.gasolina == 0:\n            print(\"fail: tanque vazio\")\n            return False\n\n        if self.gasolina >= distancia:\n            self.gasolina -= distancia\n            self.km += distancia\n            return True\n        else:\n            km_rodado: int = self.gasolina\n            self.km += km_rodado\n            self.gasolina = 0\n\n            if km_rodado > 0:\n                print(f\"fail: tanque vazio apos andar {km_rodado} km\")\n            else:\n                print(\"fail: tanque vazio\")\n            return False\n\n\ndef main():\n    carro = Carro()\n\n    try:\n        while True:\n            line = input()\n            line = line.strip()\n\n            if not line:\n                continue\n\n            print(f\"${line}\")\n\n            parts = line.split()\n            cmd = parts[0]\n\n            if cmd == \"show\":\n                print(carro)\n            elif cmd == \"enter\":\n                carro.entrar()\n            elif cmd == \"leave\":\n                carro.sair()\n            elif cmd == \"fuel\":\n                if len(parts) > 1:\n                    try:\n                        quantidade = int(parts[1])\n                        carro.fuel(quantidade)\n                    except ValueError:\n                        pass\n            elif cmd == \"drive\":\n                if len(parts) > 1:\n                    try:\n                        distancia = int(parts[1])\n                        carro.drive(distancia)\n                    except ValueError:\n                        pass\n            elif cmd == \"end\":\n                break\n    except EOFError:\n        pass\n    except:\n        pass\n\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "100"
        }
    ]
}