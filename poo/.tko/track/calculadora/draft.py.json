{
    "patches": [
        {
            "label": "2025-10-05_16-28-37",
<<<<<<< Updated upstream
            "content": "@@ -1 +0,0 @@\n- \n",
            "lines": "0"
=======
<<<<<<< HEAD
            "content": "",
            "lines": "0"
=======
            "content": "@@ -1 +0,0 @@\n- \n",
            "lines": "0"
>>>>>>> Stashed changes
        },
        {
            "label": "2025-10-05_17-10-53",
            "content": "@@ -1,8 +1,26 @@\n+@@ -1,1483 +1 @@%0A-\n class Ca\n@@ -29,17 +29,19 @@\n uladora:\n-%0A\n+%250A\n     def \n@@ -68,25 +68,27 @@\n ryMax: int):\n-%0A\n+%250A\n         self\n@@ -101,17 +101,19 @@\n ay = 0.0\n-%0A\n+%250A\n         \n@@ -128,17 +128,19 @@\n tery = 0\n-%0A\n+%250A\n         \n@@ -159,34 +159,38 @@\n Max = batteryMax\n-%0A%0A\n+%250A%250A\n     def __str__(\n@@ -191,25 +191,27 @@\n str__(self):\n-%0A\n+%250A\n         retu\n@@ -214,17 +214,19 @@\n return f\n-%22\n+%2522\n display \n@@ -231,22 +231,26 @@\n y = \n-%7B\n+%257B\n self.di\n-s\n+a\n play\n-%7D\n+%257D\n , ba\n@@ -257,17 +257,19 @@\n ttery = \n-%7B\n+%257B\n self.bat\n@@ -276,12 +276,20 @@\n tery\n-%7D%22%0A%0A\n+%257D%2522%250A%250A\n     \n@@ -317,17 +317,19 @@\n e: int):\n-%0A\n+%250A\n         \n@@ -349,17 +349,19 @@\n += value\n-%0A\n+%250A\n         \n@@ -376,17 +376,19 @@\n battery \n-%3E\n+%253E\n  self.ba\n@@ -396,17 +396,19 @@\n teryMax:\n-%0A\n+%250A\n         \n@@ -441,18 +441,22 @@\n tteryMax\n-%0A%0A\n+%250A%250A\n     def \n@@ -472,17 +472,19 @@\n y(self):\n-%0A\n+%250A\n         \n@@ -503,13 +503,17 @@\n ery \n-%3E 0:%0A\n+%253E 0:%250A\n     \n@@ -537,17 +537,19 @@\n ery -= 1\n-%0A\n+%250A\n         \n@@ -563,17 +563,19 @@\n urn True\n-%0A\n+%250A\n         \n@@ -571,33 +571,35 @@\n %250A        else:\n-%0A\n+%250A\n             prin\n@@ -596,25 +596,27 @@\n       print(\n-%22\n+%2522\n fail: bateri\n@@ -629,19 +629,23 @@\n ficiente\n-%22)%0A\n+%2522)%250A\n         \n@@ -660,25 +660,27 @@\n rn False\n-%0A\n+%250A\n         \n %0A    def\n@@ -671,17 +671,19 @@\n         \n-%0A\n+%250A\n     def \n@@ -704,33 +704,35 @@\n loat, b: float):\n-%0A\n+%250A\n         if self.\n@@ -736,33 +736,35 @@\n lf.useBattery():\n-%0A\n+%250A\n             self\n@@ -779,18 +779,22 @@\n  = a + b\n-%0A%0A\n+%250A%250A\n     def \n@@ -823,17 +823,19 @@\n  float):\n-%0A\n+%250A\n         \n@@ -855,17 +855,19 @@\n ttery():\n-%0A\n+%250A\n         \n@@ -880,17 +880,19 @@\n  b == 0:\n-%0A\n+%250A\n         \n@@ -905,17 +905,19 @@\n   print(\n-%22\n+%2522\n fail:div\n@@ -929,19 +929,23 @@\n por zero\n-%22)%0A\n+%2522)%250A\n         \n@@ -953,17 +953,19 @@\n    else:\n-%0A\n+%250A\n         \n@@ -992,18 +992,22 @@\n  = a / b\n-%0A%0A\n+%250A%250A\n def main\n@@ -1009,17 +1009,19 @@\n  main():\n-%0A\n+%250A\n     calc\n@@ -1027,18 +1027,22 @@\n c = None\n-%0A%0A\n+%250A%250A\n     whil\n@@ -1048,17 +1048,19 @@\n le True:\n-%0A\n+%250A\n         \n@@ -1081,17 +1081,19 @@\n .strip()\n-%0A\n+%250A\n         \n@@ -1104,17 +1104,19 @@\n ot line:\n-%0A\n+%250A\n         \n@@ -1127,18 +1127,22 @@\n continue\n-%0A%0A\n+%250A%250A\n     prin\n@@ -1148,19 +1148,29 @@\n nt(f\n-%22$%7Bline%7D%22)%0A\n+%2522$%257Bline%257D%2522)%250A\n     \n@@ -1189,17 +1189,19 @@\n .split()\n-%0A\n+%250A\n     cmd \n@@ -1211,13 +1211,21 @@\n arts\n-%5B0%5D%0A%0A\n+%255B0%255D%250A%250A\n     \n@@ -1238,15 +1238,21 @@\n  == \n-%22end%22:%0A\n+%2522end%2522:%250A\n     \n@@ -1260,17 +1260,19 @@\n    break\n-%0A\n+%250A\n     elif\n@@ -1283,16 +1283,22 @@\n  == \n-%22\n+%2522\n init\n-%22:%0A\n+%2522:%250A\n     \n@@ -1321,38 +1321,44 @@\n ladora(int(parts\n-%5B1%5D))%0A\n+%255B1%255D))%250A\n     elif cmd == \n@@ -1361,16 +1361,22 @@\n  == \n-%22\n+%2522\n show\n-%22:%0A\n+%2522:%250A\n     \n@@ -1390,17 +1390,19 @@\n nt(calc)\n-%0A\n+%250A\n     elif\n@@ -1413,18 +1413,24 @@\n  == \n-%22\n+%2522\n charge\n-%22:%0A\n+%2522:%250A\n     \n@@ -1458,14 +1458,20 @@\n arts\n-%5B1%5D))%0A\n+%255B1%255D))%250A\n     \n@@ -1486,15 +1486,21 @@\n  == \n-%22sum%22:%0A\n+%2522sum%2522:%250A\n     \n@@ -1515,35 +1515,39 @@\n .sum(float(parts\n-%5B1%5D\n+%255B1%255D\n ), float(float(p\n@@ -1550,22 +1550,28 @@\n at(parts\n-%5B2%5D))%0A\n+%255B2%255D))%250A\n     elif\n@@ -1582,15 +1582,21 @@\n  == \n-%22div%22:%0A\n+%2522div%2522:%250A\n     \n@@ -1623,11 +1623,15 @@\n arts\n-%5B1%5D\n+%255B1%255D\n ), f\n@@ -1644,15 +1644,23 @@\n arts\n-%5B2%5D))%0A%0A\n+%255B2%255D))%250A%250A\n if _\n@@ -1674,17 +1674,19 @@\n  == \n-%22\n+%2522\n __main__\n %22:%0A \n@@ -1685,11 +1685,15 @@\n in__\n-%22:%0A\n+%2522:%250A\n     \n@@ -1696,12 +1696,16 @@\n       main()\n+%0A+ %0A\n",
            "lines": "3"
        },
        {
            "label": "2025-10-05_17-54-03",
            "content": "@@ -210,12 +210,8 @@\n play\n-:.2f\n %7D, b\n@@ -295,35 +295,86 @@\n ery \n++\n = \n-min(self.battery + value,\n+value%0A        if self.battery %3E self.batteryMax:%0A            self.battery =\n  sel\n@@ -385,17 +385,16 @@\n tteryMax\n-)\n %0A%0A    de\n@@ -395,19 +395,19 @@\n     def \n-has\n+use\n Battery(\n@@ -415,16 +415,37 @@\n elf)\n- -%3E bool\n+:%0A        if self.battery %3E 0\n :%0A  \n@@ -442,34 +442,35 @@\n ry %3E 0:%0A        \n-if\n+   \n  self.battery %3C=\n@@ -471,12 +471,49 @@\n ery \n-%3C= 0\n+-= 1%0A            return True%0A        else\n :%0A  \n@@ -587,54 +587,8 @@\n lse%0A\n-        self.battery -= 1%0A        return True%0A\n     \n@@ -638,36 +638,32 @@\n %0A        if \n-not \n self.\n-has\n+use\n Battery():%0A \n@@ -661,35 +661,16 @@\n tery():%0A\n-            return%0A\n         \n@@ -749,20 +749,16 @@\n  if \n-not \n self.\n-has\n+use\n Batt\n@@ -764,35 +764,16 @@\n tery():%0A\n-            return%0A\n         \n@@ -850,19 +850,18 @@\n     \n-    return%0A\n+else:%0A    \n     \n@@ -918,16 +918,17 @@\n  = None%0A\n+%0A\n     whil\n@@ -939,25 +939,8 @@\n ue:%0A\n-        try:%0A    \n     \n@@ -974,20 +974,16 @@\n         \n-    \n if not l\n@@ -987,20 +987,16 @@\n t line:%0A\n-    \n         \n",
            "lines": "60"
        },
        {
            "label": "2025-10-05_18-12-01",
            "content": "@@ -878,17 +878,16 @@\n  a / b%0A%0A\n-%0A\n def main\n@@ -1021,24 +1021,16 @@\n ntinue%0A%0A\n-        \n     prin\n@@ -1043,24 +1043,16 @@\n line%7D%22)%0A\n-        \n     part\n@@ -1068,24 +1068,16 @@\n split()%0A\n-        \n     cmd \n@@ -1088,24 +1088,16 @@\n rts%5B0%5D%0A%0A\n-        \n     if c\n@@ -1121,30 +1121,14 @@\n     \n- \n-       break%0A        \n+break%0A\n     \n@@ -1147,24 +1147,16 @@\n %22init%22:%0A\n-        \n         \n@@ -1185,32 +1185,24 @@\n (parts%5B1%5D))%0A\n-        \n     elif cmd\n@@ -1213,24 +1213,16 @@\n %22show%22:%0A\n-        \n         \n@@ -1233,24 +1233,16 @@\n t(calc)%0A\n-        \n     elif\n@@ -1263,32 +1263,24 @@\n e%22:%0A        \n-     \n-   \n calc.charge(\n@@ -1290,32 +1290,24 @@\n (parts%5B1%5D))%0A\n-        \n     elif cmd\n@@ -1317,24 +1317,16 @@\n  %22sum%22:%0A\n-        \n         \n@@ -1343,32 +1343,38 @@\n loat(parts%5B1%5D), \n+float(\n float(parts%5B2%5D))\n@@ -1374,24 +1374,16 @@\n ts%5B2%5D))%0A\n-        \n     elif\n@@ -1397,24 +1397,16 @@\n  %22div%22:%0A\n-        \n         \n@@ -1452,52 +1452,8 @@\n %5D))%0A\n-        except EOFError:%0A            break%0A%0A\n %0Aif \n@@ -1476,16 +1476,18 @@\n ain__%22:%0A\n+  \n     main\n",
            "lines": "59"
        },
        {
            "label": "2025-10-05_18-15-57",
            "content": "@@ -1386,23 +1386,8 @@\n 1%5D))\n- # type: ignore\n %0A   \n@@ -1476,54 +1476,8 @@\n 2%5D))\n- # pyright: ignore%5BreportOptionalMemberAccess%5D\n %0A   \n@@ -1566,54 +1566,8 @@\n 2%5D))\n- # pyright: ignore%5BreportOptionalMemberAccess%5D\n %0A   \n",
            "lines": "63"
        },
        {
            "label": "2025-10-05_18-20-02",
            "content": "@@ -1113,17 +1113,16 @@\n rts%5B0%5D%0A%0A\n-%0A\n         \n@@ -1136,17 +1136,16 @@\n cmd == %22\n-$\n end%22:%0A  \n@@ -1189,17 +1189,16 @@\n cmd == %22\n-$\n init%22:%0A \n@@ -1271,17 +1271,16 @@\n cmd == %22\n-$\n show%22:%0A \n@@ -1331,17 +1331,16 @@\n cmd == %22\n-$\n charge%22:\n@@ -1374,32 +1374,47 @@\n e(int(parts%5B1%5D))\n+ # type: ignore\n %0A            eli\n@@ -1423,17 +1423,16 @@\n cmd == %22\n-$\n sum%22:%0A  \n@@ -1479,32 +1479,78 @@\n float(parts%5B2%5D))\n+ # pyright: ignore%5BreportOptionalMemberAccess%5D\n %0A            eli\n@@ -1559,17 +1559,16 @@\n cmd == %22\n-$\n div%22:%0A  \n@@ -1623,16 +1623,62 @@\n rts%5B2%5D))\n+ # pyright: ignore%5BreportOptionalMemberAccess%5D\n %0A       \n",
            "lines": "63"
        },
        {
            "label": "2025-10-05_18-24-18",
            "content": "@@ -878,16 +878,17 @@\n  a / b%0A%0A\n+%0A\n def main\n@@ -1022,16 +1022,24 @@\n ntinue%0A%0A\n+        \n     prin\n@@ -1052,16 +1052,24 @@\n line%7D%22)%0A\n+        \n     part\n@@ -1085,16 +1085,24 @@\n split()%0A\n+        \n     cmd \n@@ -1113,16 +1113,25 @@\n rts%5B0%5D%0A%0A\n+%0A        \n     if c\n@@ -1137,16 +1137,17 @@\n cmd == %22\n+$\n end%22:%0A  \n@@ -1156,14 +1156,30 @@\n     \n-break%0A\n+        break%0A        \n     \n@@ -1195,15 +1195,24 @@\n == %22\n+$\n init%22:%0A\n+        \n     \n@@ -1241,32 +1241,40 @@\n (int(parts%5B1%5D))%0A\n+        \n     elif cmd == \n@@ -1278,15 +1278,24 @@\n == %22\n+$\n show%22:%0A\n+        \n     \n@@ -1310,16 +1310,24 @@\n t(calc)%0A\n+        \n     elif\n@@ -1335,16 +1335,17 @@\n cmd == %22\n+$\n charge%22:\n@@ -1349,24 +1349,32 @@\n e%22:%0A        \n+    \n+    \n calc.charge(\n@@ -1384,24 +1384,32 @@\n (parts%5B1%5D))%0A\n+        \n     elif cmd\n@@ -1417,14 +1417,23 @@\n == %22\n+$\n sum%22:%0A\n+        \n     \n@@ -1462,22 +1462,16 @@\n ts%5B1%5D), \n-float(\n float(pa\n@@ -1475,24 +1475,32 @@\n (parts%5B2%5D))%0A\n+        \n     elif cmd\n@@ -1508,14 +1508,23 @@\n == %22\n+$\n div%22:%0A\n+        \n     \n@@ -1570,16 +1570,60 @@\n ts%5B2%5D))%0A\n+        except EOFError:%0A            break%0A%0A\n %0Aif __na\n@@ -1642,18 +1642,16 @@\n ain__%22:%0A\n-  \n     main\n",
            "lines": "64"
        },
        {
            "label": "2025-10-05_18-24-59",
            "content": "@@ -625,32 +625,36 @@\n  return%0A        \n+    \n self.display = a\n@@ -759,16 +759,20 @@\n         \n+    \n if b == \n@@ -770,24 +770,28 @@\n  if b == 0:%0A\n+    \n             \n@@ -802,17 +802,16 @@\n t(%22fail:\n- \n divisao \n@@ -825,39 +825,47 @@\n o%22)%0A            \n+    \n return%0A\n+    \n         self.dis\n@@ -878,17 +878,16 @@\n  a / b%0A%0A\n-%0A\n def main\n@@ -1021,24 +1021,16 @@\n ntinue%0A%0A\n-        \n     prin\n@@ -1043,24 +1043,16 @@\n line%7D%22)%0A\n-        \n     part\n@@ -1068,24 +1068,16 @@\n split()%0A\n-        \n     cmd \n@@ -1088,24 +1088,16 @@\n rts%5B0%5D%0A%0A\n-        \n     if c\n@@ -1103,17 +1103,16 @@\n cmd == %22\n-$\n end%22:%0A  \n@@ -1121,30 +1121,14 @@\n     \n-        break%0A        \n+break%0A\n     \n@@ -1144,24 +1144,15 @@\n == %22\n-$\n init%22:%0A\n-        \n     \n@@ -1185,32 +1185,24 @@\n (parts%5B1%5D))%0A\n-        \n     elif cmd\n@@ -1210,24 +1210,15 @@\n == %22\n-$\n show%22:%0A\n-        \n     \n@@ -1233,24 +1233,16 @@\n t(calc)%0A\n-        \n     elif\n@@ -1250,17 +1250,16 @@\n cmd == %22\n-$\n charge%22:\n@@ -1263,32 +1263,24 @@\n e%22:%0A        \n-    \n-    \n calc.charge(\n@@ -1290,32 +1290,24 @@\n (parts%5B1%5D))%0A\n-        \n     elif cmd\n@@ -1315,23 +1315,14 @@\n == %22\n-$\n sum%22:%0A\n-        \n     \n@@ -1343,32 +1343,38 @@\n loat(parts%5B1%5D), \n+float(\n float(parts%5B2%5D))\n@@ -1374,24 +1374,16 @@\n ts%5B2%5D))%0A\n-        \n     elif\n@@ -1395,23 +1395,14 @@\n == %22\n-$\n div%22:%0A\n-        \n     \n@@ -1451,51 +1451,8 @@\n 2%5D))\n-%0A        except EOFError:%0A            break\n %0A%0Aif\n",
            "lines": "59"
        },
        {
            "label": "2025-10-05_18-25-50",
            "content": "@@ -349,19 +349,19 @@\n     def \n-use\n+has\n Battery(\n@@ -524,16 +524,24 @@\n rn True%0A\n+        \n %0A    def\n@@ -579,32 +579,36 @@\n %0A        if \n+not \n self.\n-use\n+has\n Battery():%0A \n@@ -602,32 +602,47 @@\n sBattery():%0A    \n+        return%0A\n         self.dis\n@@ -686,32 +686,85 @@\n oat, b: float):%0A\n+        if not self.hasBattery():%0A            return%0A\n         if b == \n@@ -833,42 +833,8 @@\n urn%0A\n-        if self.useBattery():%0A    \n     \n@@ -1117,16 +1117,17 @@\n cmd == %22\n+$\n end%22:%0A  \n@@ -1171,16 +1171,17 @@\n cmd == %22\n+$\n init%22:%0A \n@@ -1254,16 +1254,17 @@\n cmd == %22\n+$\n show%22:%0A \n@@ -1315,16 +1315,17 @@\n cmd == %22\n+$\n charge%22:\n@@ -1393,16 +1393,17 @@\n cmd == %22\n+$\n sum%22:%0A  \n@@ -1484,16 +1484,17 @@\n cmd == %22\n+$\n div%22:%0A  \n",
            "lines": "62"
        },
        {
            "label": "2025-10-05_18-27-13",
            "content": "@@ -628,16 +628,20 @@\n  a + b%0A%0A\n+    \n def div(\n@@ -675,152 +675,8 @@\n     \n-if self.battery %3C= 0:%0A        print(%22fail: bateria insuficiente%22)%0A        return%0A    # gasta a bateria mesmo se der erro%0A    self.battery -= 1%0A%0A\n     \n@@ -682,24 +682,28 @@\n  if b == 0:%0A\n+    \n         prin\n@@ -742,40 +742,18 @@\n     \n+    \n return\n-%0A%0A    self.display = a / b\n %0A   \n",
            "lines": "60"
        },
        {
            "label": "2025-10-05_18-30-41",
            "content": "@@ -628,20 +628,16 @@\n  a + b%0A%0A\n-    \n def div(\n@@ -655,36 +655,32 @@\n oat, b: float):%0A\n-    \n     if self.batt\n@@ -689,36 +689,32 @@\n y %3C= 0:%0A        \n-    \n print(%22fail: bat\n@@ -737,28 +737,24 @@\n e%22)%0A        \n-    \n return%0A     \n@@ -756,54 +756,44 @@\n     \n-    \n # \n-CONSUME A BATERIA MESMO SE DER ERRO%0A    \n+gasta a bateria mesmo se der erro%0A\n     \n@@ -811,20 +811,16 @@\n y -= 1%0A%0A\n-    \n     if b\n@@ -826,36 +826,32 @@\n b == 0:%0A        \n-    \n print(%22fail: div\n@@ -878,20 +878,16 @@\n     \n-    \n return%0A%0A\n     \n@@ -882,16 +882,75 @@\n return%0A%0A\n+    self.display = a / b%0A        if self.useBattery():%0A    \n         \n@@ -972,17 +972,16 @@\n a / b%0A%0A%0A\n-%0A\n def main\n",
            "lines": "68"
        },
        {
            "label": "2025-10-05_18-35-44",
            "content": "@@ -763,23 +763,62 @@\n   return\n+%0A\n        \n+ # CONSUME A BATERIA MESMO SE DER ERRO\n %0A       \n",
            "lines": "67"
        },
        {
            "label": "2025-10-05_18-37-31",
            "content": "@@ -1378,48 +1378,8 @@\n e%22:%0A\n-                if calc is not None:%0A   \n     \n@@ -1452,48 +1452,8 @@\n m%22:%0A\n-                if calc is not None:%0A   \n     \n@@ -1542,48 +1542,8 @@\n v%22:%0A\n-                if calc is not None:%0A   \n     \n",
            "lines": "66"
        },
        {
            "label": "2025-10-05_18-42-57",
            "content": "@@ -1800,16 +1800,8 @@\n   main()\n-%0A%0A      \n",
            "lines": "69"
        },
        {
            "label": "2025-10-05_19-02-36",
            "content": "class Calculadora:\n    def __init__(self, batteryMax: int):\n        self.display = 0.0\n        self.battery = 0\n        self.batteryMax = batteryMax\n\n    def __str__(self):\n        return f\"display = {self.display:.2f}, battery = {self.battery}\"\n\n    def charge(self, value: int):\n        self.battery = min(self.battery + value, self.batteryMax)\n\n    def useBattery(self) -> bool:\n        if self.battery <= 0:\n            print(\"fail: bateria insuficiente\")\n            return False\n        self.battery -= 1\n        return True\n\n    def sum(self, a: float, b: float):\n        if self.useBattery():\n            self.display = a + b\n\n    def div(self, a: float, b: float):\n        if self.battery <= 0:\n            print(\"fail: bateria insuficiente\")\n            return       \n        self.battery -= 1\n\n        if b == 0:\n            print(\"fail: divisao por zero\")\n            return\n\n        self.display = a / b\n\n\n\ndef main():\n    calc = None\n    while True:\n        try:\n            line = input().strip()\n            if not line:\n                continue\n\n            print(f\"${line}\")\n            parts = line.split()\n            cmd = parts[0]\n\n            if cmd == \"end\":\n                break\n            elif cmd == \"init\":\n                calc = Calculadora(int(parts[1]))\n            elif cmd == \"show\":\n                print(calc)\n            elif cmd == \"charge\":\n                if calc is not None:\n                   calc.charge(int(parts[1]))\n            elif cmd == \"sum\":\n                if calc is not None:\n                   calc.sum(float(parts[1]), float(parts[2]))\n            elif cmd == \"div\":\n                if calc is not None:\n                   calc.div(float(parts[1]), float(parts[2]))\n        except EOFError:\n            break\n\nif __name__ == \"__main__\":\n      main()\n\n      ",
            "lines": "71"
<<<<<<< Updated upstream
=======
>>>>>>> 72c2e04 (atividade 'calculadora')
>>>>>>> Stashed changes
        }
    ]
}